version: 2.1

executors:
  default:
    docker:
      - image: cimg/node:16.16
    working_directory: ~/project
  android:
    docker:
      - image: circleci/android:api-30-node
    working_directory: ~/project
  ios:
    macos:
      xcode: "13.2.1"
    resource_class: large
    working_directory: ~/project

commands:
  attach_project:
    steps:
      - attach_workspace:
          at: ~/project
  persist_project:
    steps:
      - persist_to_workspace:
          root: .
          paths: .

orbs:
  ruby: circleci/ruby@1.2.0

jobs:
  install-dependencies:
    executor: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-
      - restore_cache:
          keys:
            - dependencies-example-{{ checksum "example/package.json" }}
            - dependencies-example-
      - run:
          name: Prepare .npmrc
          command: |
            cp .npmrc.ci .npmrc
      - run:
          name: Install dependencies
          command: |
            yarn example install --frozen-lockfile
            yarn install --frozen-lockfile
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths: node_modules
      - save_cache:
          key: dependencies-example-{{ checksum "example/package.json" }}
          paths: example/node_modules
      - persist_project

  lint:
    executor: default
    steps:
      - attach_project
      - run:
          name: Lint files
          command: |
            yarn check:lint

  typescript:
    executor: default
    steps:
      - attach_project
      - run:
          name: Typecheck files
          command: |
            yarn check:ts

  unit-tests-ts:
    executor: default
    steps:
      - attach_project
      - run:
          name: Run unit tests (TS)
          command: |
            yarn test:ts:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: ./reports/

  unit-tests-android:
    executor: android
    steps:
      - attach_project
      - ruby/install-deps
      - run:
          name: Run unit tests (Android)
          command: |
            yarn test:android
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results

  unit-tests-ios:
    executor: ios
    steps:
      - attach_project
      - run:
          name: "Set Ruby version"
          command: echo "ruby-3.1.0" > ~/.ruby-version
      - run:
          name: "Configure Bundler"
          command: |
            echo $(export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")) >> $BASH_ENV
            source $BASH_ENV
            sudo gem install bundler
            bundle install
      - run:
          name: Run unit tests (iOS)
          command: |
            yarn test:ios
      - store_test_results:
          path: ~/fastlane/test_output

  release:
    executor: default
    steps:
      - attach_project
      - run:
          name: Add github.com to known hosts
          command: mkdir -p ~/.ssh/ && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Set git global variables
          command: |
            ./scripts/git-variables.sh
      - run:
          name: Release SDK
          command: |
            ./scripts/release.sh

workflows:
  build-and-test:
    jobs:
      - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - typescript:
          requires:
            - install-dependencies
      - unit-tests-ts:
          requires:
            - install-dependencies
      - unit-tests-android:
          requires:
            - install-dependencies
      - unit-tests-ios:
          requires:
            - install-dependencies
      - approve-release:
          type: approval
          requires:
            - lint
            - typescript
            - unit-tests-ts
            - unit-tests-android
            - unit-tests-ios
          filters:
            branches:
              only: master
      - release:
          requires:
            - approve-release
